<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.hy.sty.mapper.StudentsMapper" >
  <resultMap id="BaseResultMap" type="com.hy.sty.entity.Students" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="user" property="user" jdbcType="VARCHAR" />
    <result column="email" property="email" jdbcType="VARCHAR" />
    <result column="date" property="date" jdbcType="TIMESTAMP" />
    <result column="age" property="age" jdbcType="INTEGER" />
  </resultMap>
  
  <sql id="Base_Column_List" >
    id, user, email, date, age
  </sql>
  
  <!-- 查询所有的学生信息 -->
  <select id="findAll" resultType="Students">
  select 
    <include refid="Base_Column_List" />
    from students
  </select>
  <!-- 根据某个条件查询学生信息 -->
  <select id="findByCondition" resultType="Students" parameterType="Students">
  select 
    <include refid="Base_Column_List" />
    from students
    <trim prefix="where" prefixOverrides="AND|OR">
    <if test="id!=null">id=#{id}</if>
    <if test="user!=null"> and user like concat('%',#{user},'%')</if>
    <if test="email!=null">and email like concat('%',#{email},'%')</if>
    </trim>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from students
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from students
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.hy.sty.entity.Students" >
    insert into students (user, email, 
      date, age)
    values (#{user,jdbcType=VARCHAR}, #{email,jdbcType=VARCHAR}, 
      #{date,jdbcType=TIMESTAMP}, #{age,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.hy.sty.entity.Students" >
    insert into students
    <trim prefix="(" suffix=")" suffixOverrides="," >
      
      <if test="user != null" >
        user,
      </if>
      <if test="email != null" >
        email,
      </if>
      <if test="date != null" >
        date,
      </if>
      <if test="age != null" >
        age,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="user != null" >
        #{user,jdbcType=VARCHAR},
      </if>
      <if test="email != null" >
        #{email,jdbcType=VARCHAR},
      </if>
      <if test="date != null" >
        #{date,jdbcType=TIMESTAMP},
      </if>
      <if test="age != null" >
        #{age,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.hy.sty.entity.Students" >
    update students
    <set >
      <if test="user != null" >
        user = #{user,jdbcType=VARCHAR},
      </if>
      <if test="email != null" >
        email = #{email,jdbcType=VARCHAR},
      </if>
      <if test="date != null" >
        date = #{date,jdbcType=TIMESTAMP},
      </if>
      <if test="age != null" >
        age = #{age,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.hy.sty.entity.Students" >
    update students
    set user = #{user,jdbcType=VARCHAR},
      email = #{email,jdbcType=VARCHAR},
      date = #{date,jdbcType=TIMESTAMP},
      age = #{age,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>